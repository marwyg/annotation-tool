#!/bin/bash

if [ $# -ne 1 ]; then
  echo "Usage: $0 release"
  echo " eg: $0 17.5 -> downloads the 17.5 allinone release tarball and copies its jars to your ~/.m2 repository"
  exit 1
fi

RELEASE="$1"

# Install required tools if they are missing
for tool in curl jq rsync; do
  if ! command -v $tool &>/dev/null; then
    echo "$tool not found. Installing..."
    sudo apt-get update && sudo apt-get install -y $tool
  fi
done

# Fetch the download URL for the allinone tarball
url=$(curl -s -L \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  "https://api.github.com/repos/opencast/opencast/releases/tags/${RELEASE}" | \
  jq -r '.assets[] | select(.name | contains("allinone")) | .browser_download_url')

if [ -z "$url" ]; then
  echo "‚ùå No allinone release found for version ${RELEASE}"
  exit 1
fi

echo "‚¨áÔ∏è Downloading $url"
curl -LO "$url"

TARBALL=$(basename "$url")
tar xzf "$TARBALL"

# Copy artifacts to local Maven repo
mkdir -p ~/.m2/repository/org/opencastproject
rsync -a ./opencast-dist-allinone/system/org/opencastproject/ ~/.m2/repository/org/opencastproject/

# Dynamically install all .jar files in the distribution
find ./opencast-dist-allinone/system/org/opencastproject/ -name "*.jar" | while read jar; do
  relpath=${jar#./opencast-dist-allinone/system/}
  groupId=$(dirname "$relpath" | tr '/' '.')
  artifactId=$(basename "$(dirname "$relpath")")
  version=$(basename "$relpath" | sed -E "s/.*-([0-9]+\.[0-9]+)\.jar/\1/")

  echo "üì¶ Installing $groupId:$artifactId:$version"
  mvn install:install-file \
    -Dfile="$jar" \
    -DgroupId="$groupId" \
    -DartifactId="$artifactId" \
    -Dversion="$RELEASE" \
    -Dpackaging=jar \
    -DgeneratePom=true \
    -q
done

# Clean up
rm -rf opencast-dist-allinone* "$TARBALL"
